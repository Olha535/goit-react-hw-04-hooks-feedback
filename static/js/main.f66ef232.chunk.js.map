{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Container/Container.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","feedback","map","option","item","button","type","value","onClick","Container","children","container","Section","title","Statistics","good","neutral","bad","total","positivePercentage","text","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f66ef232.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__3lsyE\",\"text\":\"Statistics_text__3QQIe\",\"title\":\"Statistics_title___vmRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackOptions_feedback__2WbGa\",\"item\":\"FeedbackOptions_item__3gXud\",\"button\":\"FeedbackOptions_button__Yvvzz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__NYG_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__31wGM\"};","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={`list ${s.feedback}`}>\n      {options.map(option => (\n        <li className={s.item} key={option}>\n          <button\n            className={s.button}\n            type=\"button\"\n            value={option}\n            onClick={() => onLeaveFeedback(option)}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.oneOf(['good', 'neutral', 'bad'])),\n};\n\nexport default FeedbackOptions;\n","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport Container from '../Container';\n\nfunction Section({ title, children }) {\n  return (\n    <div>\n      <Container>\n        <h1>{title}</h1>\n        {children}\n      </Container>\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul>\n      <li className={`list ${s.item}`}>\n        <span className={s.title}>Good:</span>\n        <p className={s.text}>{good}</p>\n      </li>\n      <li className={`list ${s.item}`}>\n        <span className={s.title}>Neutral:</span>\n        <p className={s.text}>{neutral}</p>\n      </li>\n      <li className={`list ${s.item}`}>\n        <span className={s.title}>Bad:</span>\n        <p className={s.text}>{bad}</p>\n      </li>\n      <li className={`list ${s.item}`}>\n        <span className={s.title}>Total:</span>\n        <p className={s.text}>{total}</p>\n      </li>\n      <li className={`list ${s.item}`}>\n        <span className={s.title}>Positive feedback:</span>\n        <p className={s.text}>{positivePercentage} %</p>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.title}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Statistics from './Statistics';\nimport Notification from './Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const options = ['good', 'neutral', 'bad'];\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n\n  const onClick = option => {\n    switch (option) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={onClick} />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}